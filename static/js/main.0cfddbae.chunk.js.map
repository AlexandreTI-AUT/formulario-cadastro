{"version":3,"sources":["CadastroForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_FORM_STATE","nome","email","telefone","nascimento","genero","senha","comentario","REGEX","formatters","value","numbers","replace","length","validators","test","CadastroForm","form","setForm","useState","errors","setErrors","submitted","setSubmitted","message","setMessage","forcaSenha","setForcaSenha","touched","setTouched","showPassword","setShowPassword","handleChange","e","name","target","formatter","formattedValue","prev","_objectSpread","[object Object]","error","validateField","forca","match","calcularForcaSenha","validator","handleBlur","handleReset","React","createElement","className","onSubmit","preventDefault","allFieldsTouched","Object","keys","forEach","field","validate","newErrors","values","every","setTimeout","FaUser","type","onChange","onBlur","placeholder","data-testid","FaEnvelope","FaPhone","FaCalendar","map","opcao","key","checked","FaComment","maxLength","FaLock","onClick","togglePasswordVisibility","FaEyeSlash","FaEye","Array","_","index","concat","includes","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0cfddbae.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./CadastroForm.css\";\nimport {\n  FaUser,\n  FaEnvelope,\n  FaPhone,\n  FaCalendar,\n  FaLock,\n  FaEye,\n  FaEyeSlash,\n  FaComment,\n} from \"react-icons/fa\";\n\nconst INITIAL_FORM_STATE = {\n  nome: \"\",\n  email: \"\",\n  telefone: \"\",\n  nascimento: \"\",\n  genero: \"\",\n  senha: \"\",\n  comentario: \"\",\n};\n\nconst REGEX = {\n  email: /.+@.+\\..+/,\n  telefone: /^(?:\\(\\d{2}\\)\\s?\\d{4,5}-\\d{4}|\\d{11})$/,\n  nascimento: /^(?:\\d{2}\\/\\d{2}\\/\\d{4}|\\d{8})$/,\n};\n\nconst formatters = {\n  telefone: (value) => {\n    const numbers = value.replace(/\\D/g, \"\");\n    if (numbers.length <= 2) return numbers;\n    if (numbers.length <= 7) {\n      return numbers.replace(/(\\d{2})(\\d{5})/, \"($1) $2\");\n    }\n    return numbers.replace(/(\\d{2})(\\d{5})(\\d{4})/, \"($1) $2-$3\");\n  },\n\n  nascimento: (value) => {\n    const numbers = value.replace(/\\D/g, \"\");\n    if (numbers.length <= 2) return numbers;\n    if (numbers.length <= 4) {\n      return numbers.replace(/(\\d{2})(\\d{2})/, \"$1/$2\");\n    }\n    return numbers.replace(/(\\d{2})(\\d{2})(\\d{4})/, \"$1/$2/$3\");\n  },\n};\n\n// Função para calcular força da senha\nconst calcularForcaSenha = (senha) => {\n  let forca = 0;\n  if (senha.length >= 6) forca++; // Comprimento mínimo\n  if (senha.match(/[A-Z]/)) forca++; // Letra maiúscula\n  if (senha.match(/[a-z]/)) forca++; // Letra minúscula\n  if (senha.match(/[0-9]/)) forca++; // Números\n  if (senha.match(/[^A-Za-z0-9]/)) forca++; // Caracteres especiais\n  return forca;\n};\n\nconst validators = {\n  nome: (value) => (!value ? \"Nome é obrigatório\" : \"\"),\n  email: (value) => (!REGEX.email.test(value) ? \"Email inválido\" : \"\"),\n  senha: (value) => {\n    if (!value) return \"Senha é obrigatória\";\n    if (value.length < 6) return \"Senha deve ter pelo menos 6 caracteres\";\n    return \"\";\n  },\n  telefone: (value) => (!REGEX.telefone.test(value) ? \"Telefone inválido\" : \"\"),\n  nascimento: (value) =>\n    !REGEX.nascimento.test(value) ? \"Data de nascimento inválida\" : \"\",\n  genero: (value) => (!value ? \"Selecione um gênero\" : \"\"),\n  comentario: (value) =>\n    value.length > 250 ? \"Comentário excedeu o limite de 250 caracteres\" : \"\",\n};\n\nconst CadastroForm = () => {\n  // Estados\n  const [form, setForm] = useState(INITIAL_FORM_STATE);\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [forcaSenha, setForcaSenha] = useState(0);\n  const [touched, setTouched] = useState({});\n  const [showPassword, setShowPassword] = useState(false);\n\n  // Funções\n  const validate = () => {\n    const newErrors = {};\n    Object.keys(form).forEach((field) => {\n      if (field !== \"comentario\") {\n        const validateField = validators[field];\n        if (validateField) {\n          newErrors[field] = validateField(form[field]);\n        }\n      }\n    });\n    setErrors(newErrors);\n    return Object.values(newErrors).every((error) => !error);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    const formatter = formatters[name];\n    const formattedValue = formatter ? formatter(value) : value;\n\n    setForm((prev) => ({ ...prev, [name]: formattedValue }));\n    setTouched((prev) => ({ ...prev, [name]: true }));\n\n    const error = validateField(name, formattedValue);\n    setErrors((prev) => ({ ...prev, [name]: error }));\n\n    if (name === \"senha\") {\n      setForcaSenha(calcularForcaSenha(value));\n    }\n\n    setMessage(\"\");\n  };\n\n  const validateField = (name, value) => {\n    const validator = validators[name];\n    return validator ? validator(value) : \"\";\n  };\n\n  const handleBlur = (e) => {\n    const { name, value } = e.target;\n    setTouched((prev) => ({ ...prev, [name]: true }));\n    const error = validateField(name, value);\n    setErrors((prev) => ({ ...prev, [name]: error }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n\n    const allFieldsTouched = {};\n    Object.keys(form).forEach((field) => {\n      allFieldsTouched[field] = true;\n    });\n    setTouched(allFieldsTouched);\n\n    if (validate()) {\n      setMessage(\"✅ Cadastro realizado com sucesso!\");\n      setTimeout(() => {\n        handleReset();\n      }, 15000);\n    } else {\n      setMessage(\"⚠️ Por favor, preencha todos os campos obrigatórios.\");\n    }\n  };\n\n  const handleReset = () => {\n    setForm(INITIAL_FORM_STATE);\n    setErrors({});\n    setMessage(\"\");\n    setSubmitted(false);\n    setTouched({});\n    setForcaSenha(0);\n  };\n\n  const getForcaSenhaText = () => {\n    const textos = [\"Muito fraca\", \"Fraca\", \"Média\", \"Forte\", \"Muito forte\"];\n    return textos[forcaSenha - 1] || \"\";\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"formulario\">\n        <h1>Cadastro</h1>\n\n        <div>\n          <label>\n            Nome: <span className=\"required\">*</span>\n          </label>\n          <div className=\"input-container\">\n            <FaUser className=\"input-icon\" />\n            <input\n              type=\"text\"\n              name=\"nome\"\n              value={form.nome}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"\"\n              data-testid=\"input-nome\"\n              className={\n                touched.nome || submitted\n                  ? errors.nome\n                    ? \"input-error\"\n                    : \"input-success\"\n                  : \"\"\n              }\n            />\n          </div>\n          {(touched.nome || submitted) && errors.nome && (\n            <span>{errors.nome}</span>\n          )}\n        </div>\n\n        <div>\n          <label>\n            Email: <span className=\"required\">*</span>\n          </label>\n          <div className=\"input-container\">\n            <FaEnvelope className=\"input-icon\" />\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={form.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"\"\n              data-testid=\"input-email\"\n              className={\n                touched.email || submitted\n                  ? errors.email\n                    ? \"input-error\"\n                    : \"input-success\"\n                  : \"\"\n              }\n            />\n          </div>\n          {(touched.email || submitted) && errors.email && (\n            <span>{errors.email}</span>\n          )}\n        </div>\n\n        <div>\n          <label>\n            Telefone (Brasil): <span className=\"required\">*</span>\n          </label>\n\n          <div className=\"input-container\">\n            <FaPhone className=\"input-icon\" />\n            <input\n              type=\"text\"\n              name=\"telefone\"\n              value={form.telefone}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"\"\n              data-testid=\"input-telefone\"\n              className={\n                touched.telefone || submitted\n                  ? errors.telefone\n                    ? \"input-error\"\n                    : \"input-success\"\n                  : \"\"\n              }\n            />\n            {!form.telefone && (\n              <div className=\"input-mask\">(XX) XXXXX-XXXX</div>\n            )}\n          </div>\n          <label>\n            Data de Nascimento: <span className=\"required\">*</span>\n          </label>\n          <div className=\"input-container\">\n            <FaCalendar className=\"input-icon\" />\n            <input\n              type=\"text\"\n              name=\"nascimento\"\n              value={form.nascimento}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"\"\n              data-testid=\"input-nascimento\"\n              className={\n                touched.nascimento || submitted\n                  ? errors.nascimento\n                    ? \"input-error\"\n                    : \"input-success\"\n                  : \"\"\n              }\n            />\n            {!form.nascimento && <div className=\"input-mask\">DD/MM/AAAA</div>}\n          </div>\n          {(touched.nascimento || submitted) && errors.nascimento && (\n            <span>{errors.nascimento}</span>\n          )}\n        </div>\n\n        <div>\n          <label>\n            Gênero: <span className=\"required\">*</span>\n          </label>\n          <div className=\"genero-opcoes\">\n            {[\"Masculino\", \"Feminino\", \"Outro\"].map((opcao) => (\n              <label key={opcao}>\n                <input\n                  type=\"radio\"\n                  name=\"genero\"\n                  value={opcao}\n                  checked={form.genero === opcao}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {opcao}\n              </label>\n            ))}\n          </div>\n          {(touched.genero || submitted) && errors.genero && (\n            <span>{errors.genero}</span>\n          )}\n        </div>\n\n        <div>\n          <label>Comentário (até 250 caracteres):</label>\n          <div className=\"input-container\">\n            <FaComment className=\"input-icon\" />\n            <textarea\n              name=\"comentario\"\n              value={form.comentario}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              maxLength={250}\n              placeholder=\"\"\n              data-testid=\"input-comentario\"\n              className={\n                touched.comentario && errors.comentario ? \"input-error\" : \"\"\n              }\n            />\n          </div>\n          <div className=\"caracteres-contador\">\n            {form.comentario.length}/250 caracteres\n          </div>\n          {(touched.comentario || submitted) && errors.comentario && (\n            <span>{errors.comentario}</span>\n          )}\n        </div>\n\n        <div>\n          <label>\n            Senha: <span className=\"required\">*</span>\n          </label>\n          <div className=\"input-container\">\n            <FaLock className=\"input-icon\" />\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              name=\"senha\"\n              value={form.senha}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"\"\n              data-testid=\"input-senha\"\n              className={\n                touched.senha || submitted\n                  ? errors.senha\n                    ? \"input-error\"\n                    : \"input-success\"\n                  : \"\"\n              }\n            />\n            <button\n              type=\"button\"\n              onClick={togglePasswordVisibility}\n              className=\"toggle-password\"\n            >\n              {showPassword ? <FaEyeSlash /> : <FaEye />}\n            </button>\n          </div>\n          {form.senha && (\n            <div className=\"senha-forca\">\n              <div className=\"forca-barra\">\n                {[...Array(5)].map((_, index) => (\n                  <div\n                    key={index}\n                    className={`forca-nivel ${\n                      index < forcaSenha ? \"ativo\" : \"\"\n                    }`}\n                  />\n                ))}\n              </div>\n              <span className=\"forca-texto\">{getForcaSenhaText()}</span>\n            </div>\n          )}\n          {(touched.senha || submitted) && errors.senha && (\n            <span>{errors.senha}</span>\n          )}\n        </div>\n\n        <div className=\"button-group\">\n          <button\n            type=\"button\"\n            onClick={handleReset}\n            data-testid=\"btn-reset\"\n            className=\"btn-reset\"\n          >\n            Limpar\n          </button>\n          <button type=\"submit\" data-testid=\"btn-submit\">\n            Cadastrar\n          </button>\n        </div>\n\n        {message && (\n          <div\n            className={\n              message.includes(\"sucesso\") ? \"success-message\" : \"error-message\"\n            }\n          >\n            {message}\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default CadastroForm;\n","import React from 'react';\nimport CadastroForm from './CadastroForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CadastroForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}